( 0 , AM , local , 2)
( 1 , CLASS , class , 2)
( 2 , ID , parent , 2)
( 3 , { , { , 2)
( 4 , FUNC , func , 3)
( 5 , AM , local , 3)
( 6 , ID , parent , 3)
( 7 , ( , ( , 3)
( 8 , ) , ) , 3)
( 9 , { , { , 3)
( 10 , SUPER , super , 4)
( 11 , ( , ( , 4)
( 12 , ) , ) , 4)
( 13 , ; , ; , 4)
( 14 , } , } , 5)
( 15 , FUNC , func , 6)
( 16 , AM , local , 6)
( 17 , ID , parent , 6)
( 18 , ( , ( , 6)
( 19 , ) , ) , 6)
( 20 , { , { , 6)
( 21 , SUPER , super , 7)
( 22 , ( , ( , 7)
( 23 , ID , A1 , 7)
( 24 , , , , , 7)
( 25 , ID , A2 , 7)
( 26 , ) , ) , 7)
( 27 , ; , ; , 7)
( 28 , } , } , 8)
( 29 , FUNC , func , 9)
( 30 , AM , local , 9)
( 31 , CONST , const , 9)
( 32 , ID , id , 9)
( 33 , ( , ( , 9)
( 34 , ) , ) , 9)
( 35 , : , : , 9)
( 36 , DT , string , 9)
( 37 , { , { , 9)
( 38 , } , } , 10)
( 39 , FUNC , func , 11)
( 40 , AM , global , 11)
( 41 , STATIC , static , 11)
( 42 , CONST , const , 11)
( 43 , ID , id , 11)
( 44 , ( , ( , 11)
( 45 , ) , ) , 11)
( 46 , : , : , 11)
( 47 , DT , float , 11)
( 48 , { , { , 11)
( 49 , } , } , 13)
( 50 , FUNC , func , 14)
( 51 , AM , local , 14)
( 52 , ID , walk , 14)
( 53 , ( , ( , 14)
( 54 , ) , ) , 14)
( 55 , : , : , 14)
( 56 , VOID , void , 14)
( 57 , { , { , 14)
( 58 , } , } , 16)
( 59 , FUNC , func , 17)
( 60 , AM , local , 17)
( 61 , ID , call , 17)
( 62 , ( , ( , 17)
( 63 , DT , int , 17)
( 64 , ID , a , 17)
( 65 , , , , , 17)
( 66 , ID , A , 17)
( 67 , [ , [ , 17)
( 68 , ] , ] , 17)
( 69 , ID , arr , 17)
( 70 , ) , ) , 17)
( 71 , : , : , 17)
( 72 , ID , A , 17)
( 73 , { , { , 17)
( 74 , WHILE , while , 19)
( 75 , ( , ( , 19)
( 76 , ID , c , 19)
( 77 , ROP , < , 19)
( 78 , IC , 5 , 19)
( 79 , PM , + , 19)
( 80 , IC , 1 , 19)
( 81 , ) , ) , 19)
( 82 , { , { , 19)
( 83 , ID , New , 20)
( 84 , ID , cla , 20)
( 85 , = , = , 20)
( 86 , CREATE , create , 20)
( 87 , ID , New , 20)
( 88 , ( , ( , 20)
( 89 , IC , 12 , 20)
( 90 , , , , , 20)
( 91 , SC , "athar" , 20)
( 92 , ) , ) , 20)
( 93 , ; , ; , 20)
( 94 , } , } , 21)
( 95 , IF , if , 22)
( 96 , ( , ( , 22)
( 97 , IC , 4 , 22)
( 98 , ROP , >= , 22)
( 99 , IC , 43 , 22)
( 100 , PM , + , 22)
( 101 , IC , 54 , 22)
( 102 , MDM , * , 22)
( 103 , IC , 5 , 22)
( 104 , PM , + , 22)
( 105 , SELF , self , 22)
( 106 , . , . , 22)
( 107 , ID , m , 22)
( 108 , . , . , 22)
( 109 , ID , fn , 22)
( 110 , ( , ( , 22)
( 111 , ID , fn , 22)
( 112 , ( , ( , 22)
( 113 , ) , ) , 22)
( 114 , . , . , 22)
( 115 , ID , arr , 22)
( 116 , ) , ) , 22)
( 117 , ) , ) , 22)
( 118 , { , { , 22)
( 119 , ID , print , 23)
( 120 , ( , ( , 23)
( 121 , SC , "dsadas" , 23)
( 122 , ) , ) , 23)
( 123 , ; , ; , 23)
( 124 , } , } , 24)
( 125 , ELSE , else , 24)
( 126 , { , { , 24)
( 127 , DT , int , 25)
( 128 , ID , a , 25)
( 129 , [ , [ , 25)
( 130 , ] , ] , 25)
( 131 , = , = , 25)
( 132 , DT , int , 25)
( 133 , [ , [ , 25)
( 134 , IC , 3 , 25)
( 135 , ] , ] , 25)
( 136 , ; , ; , 25)
( 137 , WHILE , while , 26)
( 138 , ( , ( , 26)
( 139 , ID , a , 26)
( 140 , ROP , == , 26)
( 141 , ID , b , 26)
( 142 , ) , ) , 26)
( 143 , { , { , 26)
( 144 , LK , break , 27)
( 145 , ; , ; , 27)
( 146 , } , } , 28)
( 147 , } , } , 29)
( 148 , RETURN , return , 31)
( 149 , IC , 3 , 31)
( 150 , ; , ; , 31)
( 151 , } , } , 32)
( 152 , } , } , 34)
( 153 , FUNC , func , 36)
( 154 , ID , id , 36)
( 155 , ( , ( , 36)
( 156 , DT , int , 36)
( 157 , ID , arg1 , 36)
( 158 , , , , , 36)
( 159 , DT , char , 36)
( 160 , ID , arg2 , 36)
( 161 , , , , , 36)
( 162 , DT , string , 36)
( 163 , ID , arg3 , 36)
( 164 , ) , ) , 36)
( 165 , : , : , 36)
( 166 , DT , int , 36)
( 167 , { , { , 36)
( 168 , RETURN , return , 37)
( 169 , IC , 1 , 37)
( 170 , ; , ; , 37)
( 171 , } , } , 38)
( 172 , DT , float , 39)
( 173 , ID , var , 39)
( 174 , = , = , 39)
( 175 , ID , id , 39)
( 176 , ( , ( , 39)
( 177 , FC , 1.1 , 39)
( 178 , , , , , 39)
( 179 , IC , 1 , 39)
( 180 , , , , , 39)
( 181 , SC , "as" , 39)
( 182 , ) , ) , 39)
( 183 , ; , ; , 39)
( 184 , FUNC , func , 41)
( 185 , ID , id2 , 41)
( 186 , ( , ( , 41)
( 187 , DT , int , 41)
( 188 , ID , arg1 , 41)
( 189 , ) , ) , 41)
( 190 , : , : , 41)
( 191 , DT , float , 41)
( 192 , { , { , 41)
( 193 , RETURN , return , 42)
( 194 , IC , 1 , 42)
( 195 , ; , ; , 42)
( 196 , } , } , 43)
( 197 , DT , int , 44)
( 198 , ID , a , 44)
( 199 , = , = , 44)
( 200 , IC , 1 , 44)
( 201 , ; , ; , 44)
( 202 , FUNC , func , 45)
( 203 , ID , call , 45)
( 204 , ( , ( , 45)
( 205 , ) , ) , 45)
( 206 , : , : , 45)
( 207 , VOID , void , 45)
( 208 , { , { , 45)
( 209 , WHILE , while , 47)
( 210 , ( , ( , 47)
( 211 , ID , c , 47)
( 212 , ROP , < , 47)
( 213 , IC , 5 , 47)
( 214 , PM , + , 47)
( 215 , IC , 1 , 47)
( 216 , ) , ) , 47)
( 217 , { , { , 47)
( 218 , ID , New , 48)
( 219 , ID , cla , 48)
( 220 , = , = , 48)
( 221 , CREATE , create , 48)
( 222 , ID , New , 48)
( 223 , ( , ( , 48)
( 224 , IC , 12 , 48)
( 225 , , , , , 48)
( 226 , SC , "athar" , 48)
( 227 , ) , ) , 48)
( 228 , ; , ; , 48)
( 229 , } , } , 49)
( 230 , IF , if , 50)
( 231 , ( , ( , 50)
( 232 , IC , 4 , 50)
( 233 , ROP , >= , 50)
( 234 , IC , 43 , 50)
( 235 , PM , + , 50)
( 236 , IC , 54 , 50)
( 237 , MDM , * , 50)
( 238 , IC , 5 , 50)
( 239 , PM , + , 50)
( 240 , ID , m , 50)
( 241 , ) , ) , 50)
( 242 , { , { , 50)
( 243 , ID , print , 51)
( 244 , ( , ( , 51)
( 245 , SC , "dsadas" , 51)
( 246 , ) , ) , 51)
( 247 , ; , ; , 51)
( 248 , } , } , 52)
( 249 , ELSE , else , 52)
( 250 , { , { , 52)
( 251 , DT , int , 53)
( 252 , ID , a , 53)
( 253 , [ , [ , 53)
( 254 , ] , ] , 53)
( 255 , = , = , 53)
( 256 , DT , int , 53)
( 257 , [ , [ , 53)
( 258 , IC , 3 , 53)
( 259 , ] , ] , 53)
( 260 , ; , ; , 53)
( 261 , WHILE , while , 54)
( 262 , ( , ( , 54)
( 263 , ID , a , 54)
( 264 , ROP , == , 54)
( 265 , ID , b , 54)
( 266 , ) , ) , 54)
( 267 , { , { , 54)
( 268 , LK , break , 55)
( 269 , ; , ; , 55)
( 270 , } , } , 56)
( 271 , } , } , 57)
( 272 , RETURN , return , 59)
( 273 , ; , ; , 59)
( 274 , } , } , 60)
( 275 , FUNC , func , 62)
( 276 , EXECUTE , execute , 62)
( 277 , ( , ( , 62)
( 278 , ) , ) , 62)
( 279 , : , : , 62)
( 280 , VOID , void , 62)
( 281 , { , { , 62)
( 282 , DT , int , 64)
( 283 , ID , b , 64)
( 284 , = , = , 64)
( 285 , IC , 54 , 64)
( 286 , PM , + , 64)
( 287 , FC , 2.3 , 64)
( 288 , ; , ; , 64)
( 289 , DT , string , 65)
( 290 , ID , abc , 65)
( 291 , = , = , 65)
( 292 , CREATE , create , 65)
( 293 , ID , Person , 65)
( 294 , ( , ( , 65)
( 295 , ) , ) , 65)
( 296 , ; , ; , 65)
( 297 , DT , int , 66)
( 298 , ID , b , 66)
( 299 , = , = , 66)
( 300 , IC , 54 , 66)
( 301 , PM , + , 66)
( 302 , FC , 2.3 , 66)
( 303 , ; , ; , 66)
( 304 , DT , string , 68)
( 305 , ID , c , 68)
( 306 , [ , [ , 68)
( 307 , ] , ] , 68)
( 308 , [ , [ , 68)
( 309 , ] , ] , 68)
( 310 , = , = , 68)
( 311 , { , { , 68)
( 312 , { , { , 68)
( 313 , IC , 3 , 68)
( 314 , , , , , 68)
( 315 , IC , 4 , 68)
( 316 , } , } , 68)
( 317 , , , , , 68)
( 318 , { , { , 68)
( 319 , IC , 4 , 68)
( 320 , , , , , 68)
( 321 , IC , 5 , 68)
( 322 , , , , , 68)
( 323 , IC , 6 , 68)
( 324 , , , , , 68)
( 325 , IC , 9 , 68)
( 326 , , , , , 68)
( 327 , IC , 9 , 68)
( 328 , , , , , 68)
( 329 , IC , 9 , 68)
( 330 , } , } , 68)
( 331 , } , } , 68)
( 332 , ; , ; , 68)
( 333 , DT , int , 69)
( 334 , ID , cd , 69)
( 335 , = , = , 69)
( 336 , ID , c , 69)
( 337 , [ , [ , 69)
( 338 , IC , 2 , 69)
( 339 , ] , ] , 69)
( 340 , . , . , 69)
( 341 , ID , acv , 69)
( 342 , ( , ( , 69)
( 343 , FC , .09 , 69)
( 344 , ) , ) , 69)
( 345 , . , . , 69)
( 346 , ID , v , 69)
( 347 , ; , ; , 69)
( 348 , ID , c , 70)
( 349 , [ , [ , 70)
( 350 , IC , 2 , 70)
( 351 , ] , ] , 70)
( 352 , = , = , 70)
( 353 , IC , 4 , 70)
( 354 , ; , ; , 70)
( 355 , WHILE , while , 71)
( 356 , ( , ( , 71)
( 357 , ID , abc , 71)
( 358 , ( , ( , 71)
( 359 , IC , 2 , 71)
( 360 , ) , ) , 71)
( 361 , ROP , > , 71)
( 362 , IC , 2 , 71)
( 363 , ) , ) , 71)
( 364 , { , { , 71)
( 365 , ID , abavac , 72)
( 366 , . , . , 72)
( 367 , ID , asca , 72)
( 368 , = , = , 72)
( 369 , IC , 2312312 , 72)
( 370 , PM , + , 72)
( 371 , ID , bafa335_a , 72)
( 372 , ; , ; , 72)
( 373 , } , } , 73)
( 374 , IF , if , 75)
( 375 , ( , ( , 75)
( 376 , ID , p , 75)
( 377 , . , . , 75)
( 378 , ID , c , 75)
( 379 , . , . , 75)
( 380 , ID , d , 75)
( 381 , . , . , 75)
( 382 , ID , fn , 75)
( 383 , ( , ( , 75)
( 384 , ) , ) , 75)
( 385 , . , . , 75)
( 386 , ID , arr , 75)
( 387 , [ , [ , 75)
( 388 , IC , 4 , 75)
( 389 , ] , ] , 75)
( 390 , [ , [ , 75)
( 391 , ID , c , 75)
( 392 , PM , - , 75)
( 393 , IC , 10 , 75)
( 394 , PM , + , 75)
( 395 , ID , jump , 75)
( 396 , ( , ( , 75)
( 397 , IC , 5 , 75)
( 398 , PM , + , 75)
( 399 , IC , 1 , 75)
( 400 , ) , ) , 75)
( 401 , ROP , > , 75)
( 402 , ID , q , 75)
( 403 , ] , ] , 75)
( 404 , . , . , 75)
( 405 , ID , fn , 75)
( 406 , ( , ( , 75)
( 407 , ID , p , 75)
( 408 , . , . , 75)
( 409 , ID , c , 75)
( 410 , . , . , 75)
( 411 , ID , d , 75)
( 412 , . , . , 75)
( 413 , ID , fn , 75)
( 414 , ( , ( , 75)
( 415 , ) , ) , 75)
( 416 , . , . , 75)
( 417 , ID , arr , 75)
( 418 , [ , [ , 75)
( 419 , IC , 4 , 75)
( 420 , ] , ] , 75)
( 421 , [ , [ , 75)
( 422 , ID , c , 75)
( 423 , PM , - , 75)
( 424 , IC , 10 , 75)
( 425 , PM , + , 75)
( 426 , ID , jump , 75)
( 427 , ( , ( , 75)
( 428 , IC , 5 , 75)
( 429 , PM , + , 75)
( 430 , IC , 1 , 75)
( 431 , ) , ) , 75)
( 432 , ROP , > , 75)
( 433 , ID , q , 75)
( 434 , ] , ] , 75)
( 435 , , , , , 75)
( 436 , ID , arr , 75)
( 437 , [ , [ , 75)
( 438 , IC , 8 , 75)
( 439 , ] , ] , 75)
( 440 , . , . , 75)
( 441 , ID , fn , 75)
( 442 , ( , ( , 75)
( 443 , ) , ) , 75)
( 444 , . , . , 75)
( 445 , ID , fn , 75)
( 446 , ( , ( , 75)
( 447 , ) , ) , 75)
( 448 , , , , , 75)
( 449 , IC , 78 , 75)
( 450 , ) , ) , 75)
( 451 , PM , + , 75)
( 452 , ID , c , 75)
( 453 , PM , - , 75)
( 454 , IC , 10 , 75)
( 455 , PM , + , 75)
( 456 , ID , jump , 75)
( 457 , ( , ( , 75)
( 458 , IC , 5 , 75)
( 459 , PM , + , 75)
( 460 , IC , 1 , 75)
( 461 , ) , ) , 75)
( 462 , ROP , > , 75)
( 463 , ID , q , 75)
( 464 , ) , ) , 75)
( 465 , { , { , 75)
( 466 , LK , skip , 76)
( 467 , ; , ; , 76)
( 468 , LK , break , 77)
( 469 , ; , ; , 77)
( 470 , ID , a , 78)
( 471 , [ , [ , 78)
( 472 , IC , 234 , 78)
( 473 , ] , ] , 78)
( 474 , [ , [ , 78)
( 475 , IC , 6 , 78)
( 476 , ] , ] , 78)
( 477 , = , = , 78)
( 478 , ID , a , 78)
( 479 , ; , ; , 78)
( 480 , } , } , 80)
( 481 , } , } , 82)
