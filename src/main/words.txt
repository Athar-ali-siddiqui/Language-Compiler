local
class
parent
{
func
local
parent
(
)
{
super
(
)
;
}
func
local
parent
(
)
{
super
(
A1
,
A2
)
;
}
func
local
const
id
(
)
:
string
{
}
func
global
static
const
id
(
)
:
float
{
}
func
local
walk
(
)
:
void
{
}
func
local
call
(
int
a
,
A
[
]
arr
)
:
A
{
while
(
c
<
5
+
1
)
{
New
cla
=
create
New
(
12
,
"athar"
)
;
}
if
(
4
>=
43
+
54
*
5
+
self
.
m
.
fn
(
fn
(
)
.
arr
)
)
{
print
(
"dsadas"
)
;
}
else
{
int
a
[
]
=
int
[
3
]
;
while
(
a
==
b
)
{
break
;
}
}
return
3
;
}
}
func
id
(
int
arg1
,
char
arg2
,
string
arg3
)
:
int
{
return
1
;
}
float
var
=
id
(
1.1
,
1
,
"as"
)
;
func
id2
(
int
arg1
)
:
float
{
return
1
;
}
int
a
=
1
;
func
call
(
)
:
void
{
while
(
c
<
5
+
1
)
{
New
cla
=
create
New
(
12
,
"athar"
)
;
}
if
(
4
>=
43
+
54
*
5
+
m
)
{
print
(
"dsadas"
)
;
}
else
{
int
a
[
]
=
int
[
3
]
;
while
(
a
==
b
)
{
break
;
}
}
return
;
}
func
execute
(
)
:
void
{
int
b
=
54
+
2.3
;
string
abc
=
create
Person
(
)
;
int
b
=
54
+
2.3
;
string
c
[
]
[
]
=
{
{
3
,
4
}
,
{
4
,
5
,
6
,
9
,
9
,
9
}
}
;
int
cd
=
c
[
2
]
.
acv
(
.09
)
.
v
;
c
[
2
]
=
4
;
while
(
abc
(
2
)
>
2
)
{
abavac
.
asca
=
2312312
+
bafa335_a
;
}
if
(
p
.
c
.
d
.
fn
(
)
.
arr
[
4
]
[
c
-
10
+
jump
(
5
+
1
)
>
q
]
.
fn
(
p
.
c
.
d
.
fn
(
)
.
arr
[
4
]
[
c
-
10
+
jump
(
5
+
1
)
>
q
]
,
arr
[
8
]
.
fn
(
)
.
fn
(
)
,
78
)
+
c
-
10
+
jump
(
5
+
1
)
>
q
)
{
skip
;
break
;
a
[
234
]
[
6
]
=
a
;
}
}
